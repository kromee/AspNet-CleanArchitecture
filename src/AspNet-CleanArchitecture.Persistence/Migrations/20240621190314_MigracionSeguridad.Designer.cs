// <auto-generated />
using System;
using AspNet_CleanArchitecture.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNet_CleanArchitecture.Persistence.Migrations
{
    [DbContext(typeof(AppDbContex))]
    [Migration("20240621190314_MigracionSeguridad")]
    partial class MigracionSeguridad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3");

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ae32ea8-9044-4432-b530-3c59aaaf0407"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5200),
                            Titulo = "Sleek Wooden Cheese"
                        },
                        new
                        {
                            Id = new Guid("c07660e1-8b87-437b-8e15-29e06a78e9d8"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5420),
                            Titulo = "Unbranded Rubber Gloves"
                        },
                        new
                        {
                            Id = new Guid("17d93a36-11d6-4706-a787-e3ebdc3b56ed"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5440),
                            Titulo = "Awesome Frozen Tuna"
                        },
                        new
                        {
                            Id = new Guid("15df65da-2e6c-4348-a110-b0ff2f8bdca7"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5450),
                            Titulo = "Awesome Frozen Gloves"
                        },
                        new
                        {
                            Id = new Guid("6cc2750d-b2cb-41d7-8e3d-2adaf1ab6054"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5460),
                            Titulo = "Awesome Cotton Sausages"
                        },
                        new
                        {
                            Id = new Guid("fd41d07e-dd10-4fd2-b76d-643a33c57593"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5480),
                            Titulo = "Handcrafted Concrete Cheese"
                        },
                        new
                        {
                            Id = new Guid("76d045fa-0601-425a-a0c0-3af93b7cfb80"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5490),
                            Titulo = "Refined Granite Fish"
                        },
                        new
                        {
                            Id = new Guid("84297089-73b9-4f33-a960-fcd45df4f58b"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5500),
                            Titulo = "Licensed Granite Hat"
                        },
                        new
                        {
                            Id = new Guid("9150ff64-fccd-4bbe-9f7a-23df14274340"),
                            Descripcion = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            FechaPublicacion = new DateTime(2024, 6, 21, 19, 3, 14, 434, DateTimeKind.Utc).AddTicks(5550),
                            Titulo = "Tasty Granite Shoes"
                        });
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("curso_instructores", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precio", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c165acc-b68b-4916-99cb-7b970aa28204"),
                            Apellidos = "Lueilwitz",
                            Grado = "Product Branding Executive",
                            Nombre = "Margarett"
                        },
                        new
                        {
                            Id = new Guid("bc84cf33-de64-4cb3-b992-76edef07e7cb"),
                            Apellidos = "Braun",
                            Grado = "Internal Optimization Manager",
                            Nombre = "Albertha"
                        },
                        new
                        {
                            Id = new Guid("db74c162-c68c-4fa9-9676-ea23d3caf88b"),
                            Apellidos = "Cormier",
                            Grado = "Central Program Executive",
                            Nombre = "Wilfredo"
                        },
                        new
                        {
                            Id = new Guid("1b1eb072-6bf1-4598-a8b2-5c577bdd9410"),
                            Apellidos = "Leffler",
                            Grado = "Direct Solutions Designer",
                            Nombre = "Ebony"
                        },
                        new
                        {
                            Id = new Guid("3774b6cb-7719-485f-8409-90dae5b06b78"),
                            Apellidos = "Klocko",
                            Grado = "Human Optimization Officer",
                            Nombre = "Bradly"
                        },
                        new
                        {
                            Id = new Guid("5323e0e0-6abb-4fac-bb3d-b8f9b137e94f"),
                            Apellidos = "Connelly",
                            Grado = "Central Directives Specialist",
                            Nombre = "Jakob"
                        },
                        new
                        {
                            Id = new Guid("add60052-2c26-4c28-a6a9-5a53343779a1"),
                            Apellidos = "Collins",
                            Grado = "International Data Specialist",
                            Nombre = "Gabrielle"
                        },
                        new
                        {
                            Id = new Guid("e3f4a821-b139-49ea-913f-7e33cb02716c"),
                            Apellidos = "Quitzon",
                            Grado = "Forward Creative Agent",
                            Nombre = "Verla"
                        },
                        new
                        {
                            Id = new Guid("6ec7513f-da9d-412a-9b3d-bbbacdc88c07"),
                            Apellidos = "Bernier",
                            Grado = "Dynamic Usability Officer",
                            Nombre = "Laurine"
                        },
                        new
                        {
                            Id = new Guid("65df999e-5540-4578-bf0e-c6b28df132b3"),
                            Apellidos = "Dicki",
                            Grado = "Corporate Intranet Producer",
                            Nombre = "Antonio"
                        });
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("91e68498-fbf8-472a-ad3c-85ec25ac736c"),
                            Nombre = "Precio 1",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Persistence.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Carrera")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c1ebb981-c2ff-4f42-bb38-1bd1b9214f1e",
                            Name = "CLIENT",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_READ",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_UPDATE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_WRITE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_DELETE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUCTOR_CREATE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUCTOR_READ",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUCTOR_UPDATE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_RED",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_CREATE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_DELETE",
                            RoleId = "c9e56335-4681-4fe4-9b9c-d756d89ba8ea"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_READ",
                            RoleId = "c1ebb981-c2ff-4f42-bb38-1bd1b9214f1e"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUCTOR_READ",
                            RoleId = "c1ebb981-c2ff-4f42-bb38-1bd1b9214f1e"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_RED",
                            RoleId = "c1ebb981-c2ff-4f42-bb38-1bd1b9214f1e"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_CREATE",
                            RoleId = "c1ebb981-c2ff-4f42-bb38-1bd1b9214f1e"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Calificacion", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoInstructor", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_CleanArchitecture.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstrutores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoPrecio", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_CleanArchitecture.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Photo", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_CleanArchitecture.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstrutores");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
