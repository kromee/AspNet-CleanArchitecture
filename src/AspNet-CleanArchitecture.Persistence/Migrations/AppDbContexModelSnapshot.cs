// <auto-generated />
using System;
using AspNet_CleanArchitecture.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNet_CleanArchitecture.Persistence.Migrations
{
    [DbContext(typeof(AppDbContex))]
    partial class AppDbContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("60896d6c-215d-49f0-91f4-bd1b33e0cf9c"),
                            Descripcion = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4210),
                            Titulo = "Tasty Granite Sausages"
                        },
                        new
                        {
                            Id = new Guid("e3f7f483-bf41-4889-b677-2061cf358975"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4220),
                            Titulo = "Tasty Frozen Salad"
                        },
                        new
                        {
                            Id = new Guid("2d3f6934-eba4-414e-99b5-7c4eae4e741f"),
                            Descripcion = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4230),
                            Titulo = "Refined Concrete Fish"
                        },
                        new
                        {
                            Id = new Guid("c87464b7-4a05-461a-a764-8fa839f1991c"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4250),
                            Titulo = "Handmade Plastic Towels"
                        },
                        new
                        {
                            Id = new Guid("cefc5c27-0dc8-4ec5-8249-f2f0249c0518"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4270),
                            Titulo = "Unbranded Frozen Fish"
                        },
                        new
                        {
                            Id = new Guid("81930ad9-f8c2-4357-94c2-2a9871f953d8"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4290),
                            Titulo = "Small Cotton Tuna"
                        },
                        new
                        {
                            Id = new Guid("fca3151f-e4f3-4d56-9860-c7861f9bc10f"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4300),
                            Titulo = "Gorgeous Metal Gloves"
                        },
                        new
                        {
                            Id = new Guid("0ec123ff-d781-461c-bc40-8f8d275ce02d"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4310),
                            Titulo = "Generic Fresh Pizza"
                        },
                        new
                        {
                            Id = new Guid("e077fb98-cb97-44f0-b95a-031a342baa7e"),
                            Descripcion = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            FechaPublicacion = new DateTime(2024, 6, 20, 23, 52, 18, 344, DateTimeKind.Utc).AddTicks(4320),
                            Titulo = "Sleek Metal Computer"
                        });
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("curso_instructores", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid?>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precio", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e44c00ec-fe77-4128-b82c-ebdceea3f120"),
                            Apellidos = "Halvorson",
                            Grado = "Internal Interactions Producer",
                            Nombre = "Laurie"
                        },
                        new
                        {
                            Id = new Guid("e2be9ce6-33d1-488c-9e26-7441266cd69e"),
                            Apellidos = "Maggio",
                            Grado = "National Creative Liaison",
                            Nombre = "Nella"
                        },
                        new
                        {
                            Id = new Guid("db0bcb11-51c5-4a07-94ec-590fae95c391"),
                            Apellidos = "Hilll",
                            Grado = "Human Communications Architect",
                            Nombre = "Brandt"
                        },
                        new
                        {
                            Id = new Guid("41d18f37-d580-4e0f-b4b5-37b17c240e52"),
                            Apellidos = "Borer",
                            Grado = "Future Group Facilitator",
                            Nombre = "Kristian"
                        },
                        new
                        {
                            Id = new Guid("0d277da6-c499-4be4-a398-9780d0583602"),
                            Apellidos = "Herzog",
                            Grado = "District Data Representative",
                            Nombre = "Eino"
                        },
                        new
                        {
                            Id = new Guid("92b6f750-2eec-4194-a6b1-e12fe8b7dafc"),
                            Apellidos = "Hintz",
                            Grado = "Customer Quality Strategist",
                            Nombre = "Destiney"
                        },
                        new
                        {
                            Id = new Guid("0902a878-d1cf-4ebe-94c4-e734fe2517c0"),
                            Apellidos = "Towne",
                            Grado = "Regional Solutions Agent",
                            Nombre = "Flavie"
                        },
                        new
                        {
                            Id = new Guid("74bd3331-4ba7-4844-ba49-ccf5dbe8b718"),
                            Apellidos = "Marvin",
                            Grado = "Chief Accounts Director",
                            Nombre = "Watson"
                        },
                        new
                        {
                            Id = new Guid("f04ad3dc-c799-4554-9770-e737f60dda65"),
                            Apellidos = "O'Kon",
                            Grado = "Dynamic Tactics Developer",
                            Nombre = "Olen"
                        },
                        new
                        {
                            Id = new Guid("8edaf49b-a709-4466-bc89-88c37927ca42"),
                            Apellidos = "Windler",
                            Grado = "Chief Marketing Executive",
                            Nombre = "Trisha"
                        });
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("24aa5459-8a3b-46de-898e-70d8176f6b90"),
                            Nombre = "Precio 1",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Calificacion", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoInstructor", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_CleanArchitecture.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstrutores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.CursoPrecio", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_CleanArchitecture.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Photo", b =>
                {
                    b.HasOne("AspNet_CleanArchitecture.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstrutores");
                });

            modelBuilder.Entity("AspNet_CleanArchitecture.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
